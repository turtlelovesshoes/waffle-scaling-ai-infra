apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-model-api
  namespace: ai-model-demo
  labels:
    app: ai-model-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-model-api
  template:
    metadata:
      labels:
        app: ai-model-api
    spec:
      containers:
      - name: ai-model-api
        image: ai-model-api:latest
        imagePullPolicy: Never  # For local development
        ports:
        - containerPort: 5000
        env:
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
      # Add node affinity to spread across nodes
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ai-model-api
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: ai-model-service
  namespace: ai-model-demo
spec:
  selector:
    app: ai-model-api
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
  type: LoadBalancer